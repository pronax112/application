from flask import Flask, render_template, request, redirect, url_for, session
from flask_sqlalchemy import SQLAlchemy
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.secret_key = 'secret_key'

# Configure database settings
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///users.db'
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
db = SQLAlchemy(app)

# User model
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    username = db.Column(db.String(50), unique=True, nullable=False)
    email = db.Column(db.String(120), unique=True, nullable=False)
    password = db.Column(db.String(100), nullable=False)
    posts = db.relationship('Post', backref='author', lazy=True)

    def __repr__(self):
        return f'<User {self.username}>'

# Post model
class Post(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(100), nullable=False)
    content = db.Column(db.Text, nullable=False)
    user_id = db.Column(db.Integer, db.ForeignKey('user.id'), nullable=False)

    def __repr__(self):
        return f'<Post {self.title}>'

@app.route('/')
def index():
    # Render home page
    return render_template('index.html')

@app.route('/register', methods=['GET', 'POST'])
def register():
    if request.method == 'POST':
        # Get form data
        username = request.form['username']
        email = request.form['email']
        password = request.form['password']

        # Hash password
        hashed_password = generate_password_hash(password, method='sha256')

        # Create new user
        new_user = User(username=username, email=email, password=hashed_password)

        # Add user to database
        db.session.add(new_user)
        db.session.commit()

        # Redirect to login page
        return redirect(url_for('login'))
    else:
        # Render registration page
        return render_template('register.html')

@app.route('/login', methods=['GET', 'POST'])
def login():
    if request.method == 'POST':
        # Get form data
        email = request.form['email']
        password = request.form['password']

        # Get user from database by email
        user = User.query.filter_by(email=email).first()

        # Check if user exists and password is correct
        if user and check_password_hash(user.password, password):
            # Save user ID to session
            session['user_id'] = user.id

            # Redirect to dashboard page
            return redirect(url_for('dashboard'))
        else:
            # Show error message
            error = 'Invalid email or password'
            return render_template('login.html', error=error)
    else:
        # Render login page
        return render_template('login.html')

@app.route('/dashboard')
def dashboard():
    if 'user_id' in session:
        # Get user from database by ID
        user = User.query.get(session['user_id'])

        # Get user's posts
        posts = Post.query.filter_by(user_id=user.id).all()

        # Render dashboard page
        return render_template('dashboard.html', user=user, posts=posts)
    else:
        # Redirect to login page
       
